@model webapp.ViewModels.AuxiliarEdit
@{
    ViewBag.Title = "Plantilla";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Theme JS files -->
<script type="text/javascript" src="~/assets/js/core/app.js"></script>
<script type="text/javascript" src="~/assets/js/plugins/forms/validation/validate.min.js"></script>
<script type="text/javascript" src="~/assets/js/core/libraries/jquery_ui/interactions.min.js"></script>
<script type="text/javascript" src="~/assets/js/plugins/tables/datatables/datatables.min.js"></script>
<script type="text/javascript" src="~/assets/js/plugins/forms/selects/select2.min.js"></script>
<script type="text/javascript" src="~/assets/js/pages/form_select2.js"></script>

<script type="text/javascript" src="~/assets/js/plugins/tables/handsontable/handsontable.min.js"></script>
<!--<script type="text/javascript" src="~/assets/js/plugins/ui/prism.min.js"></script>-->

<script src="~/assets/otros/chart/chart.js"></script>
<script src="~/assets/otros/chart/chartjs-plugin-datalabels.js"></script>
<script src="~/assets/otros/inputmask/inputmask.js"></script>

@section Styles{
    <style>
        .datatable-header {
            display: none;
        }

        table.dataTable thead tr {
            background-color: #3f444e;
            color: white;
        }

        #EstructuraModal thead tr, #CargaDatatable thead tr {
            background-color: #3f444e;
            color: white;
        }

        .modal {
            text-align: center;
            padding: 0 !important;
        }

            .modal:before {
                content: '';
                display: inline-block;
                height: 100%;
                vertical-align: middle;
                margin-right: -4px;
            }

        .modal-dialog {
            display: inline-block;
            text-align: left;
            vertical-align: middle;
        }

        .ui-autocomplete {
            z-index: 215000000 !important;
        }

        .select2-no-results {
            display: none !important;
        }



        #hot_alignment .ht_master.handsontable {
            overflow: visible;
        }

        #hot_alignment {
            overflow-x: auto;
            display: block;
        }

            #hot_alignment .wtHolder {
                width: auto !important;
                height: auto !important;
            }

        .htColumnHL {
            overflow-wrap: break-word;
            writing-mode: vertical-rl;
            /*transform: scale(-1);*/
        }

        .tblx, .tblx th, .tblx td {
            border: 1px solid;
        }

        .headerTblColorPlomo {
            background-color: #55585A;
            color: white;
            border-color: #55585A;
        }

        .headerTblColorPlomo th {
            border-color: #55585A !important;
        }

        .colorBeige {
            background-color: #969076;
            color: white;
        }

        .colorGray {
            background-color: #F2F2F2;
        }

        .colorDark {
            background-color: #55585A;
            color: white;
        }

        .tblRowsHeight tr {
            line-height: 15px;
            min-height: 15px;
            height: 15px;
        }

        .tblRowsHeight th, td {
            padding: 5px !important;
        }

        .borderWhite {
            border-color: white;
        }

        .icon-custom-style {
            font-size: 25px !important;
            cursor: pointer !important;
        }

        .tab-content > .tab-pane {
            display: block !important;
            height: 0 !important;
            overflow: hidden !important;
        }

            .tab-content > .tab-pane.active {
                height: auto !important;
            }

        canvas {
            max-width: 720px;
        }

        table.dataTable tbody th, table.dataTable tbody td {
            padding: 1px 1px !important; /* e.g. change 8x to 4px here */
        }
        tr.odd {
            background-color: #ebebeb !important;
        }
        th.dt-center, td.dt-center {
            text-align: center;
            white-space: nowrap;
        }
        th.dt-left, td.dt-left {
            text-align: left;
            white-space: nowrap;
        }
        th.dt-right, td.dt-right {
            text-align: right;
            white-space: nowrap;
        }
        .center{
            text-align:center;
        }
        .cursor {
            cursor: pointer;
        }
    </style>
}

<div class="modal" id="confirmModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmación</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Solicitamos su confirmación</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" id="btnConfirmarBorrar">Aceptar</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Buscar</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-inline">
                    <div class="row">
                        <div class="col-md-6">
                            <label for="" class="">Buscar</label>
                            <input type="text" class="form-control" id="txtBuscar" oninput="fOnInputBuscar()" />
                        </div>
                        @*<div class="col-md-6">
                            <label class="radio-inline">
                                <input type="radio" name="optradio" checked>Todos
                            </label>
                            <label class="radio-inline">
                                <input type="radio" name="optradio">Por usuario
                            </label>
                        </div>*@
                        
                    </div>

                </div>
                <br />
                <div class="table-responsive">
                    <table id="tblPOPUP" class="table table-striped"></table>
                </div>
                
                    
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <!--<button type="button" class="btn btn-primary"></button>-->
            </div>
        </div>
    </div>
</div>

<!-- Main content -->
<div class="container-fluid">
    <!-- Page header -->
    <!--
    <div class="page-header">
        <div class="page-header-content">
        </div>
        <div class="breadcrumb-line breadcrumb-line-component">
            <ul class="breadcrumb">
                <li><a href="@Url.Action("Index","Home")"><i class="icon-home2 position-left"></i> Simulador</a></li>
            </ul>
        </div>
    </div>-->
    <!-- /page header -->
    <!-- Content area -->
    <div class="content" style="padding-top:0px;">

        <!-- Bordered alerts -->
        <div id="alertSim" class="alert alert-danger alert-bordered hidden">
            <button type="button" class="close" onclick="fOnAlertClose()"><span>&times;</span><span class="sr-only">Close</span></button>
            <span id="alertText" class="text-semibold">Errores</span>
        </div>
        <!-- /bordered alerts -->

        <!-- Vertical form options -->
        <div class="row">
            <div class="col-md-12">
                <!-- Basic layout-->
                <div class="panel panel-flat">
                    <div class="panel-heading">
                        <table>
                            <tr>
                                <td class="center"><i class="icon-file-empty icon-custom-style" title="Nuevo" id="btnNuevo"></i><br /><a style="color:ThreeDDarkShadow">Nuevo</a></td>
                                <td class="center"><i class="icon-floppy-disk icon-custom-style " title="Guardar" id="btnFin"></i><br /><a style="color: ThreeDDarkShadow">Grabar</a></td>
                                <td class="center"><i class="icon-bin icon-custom-style " title="Borrar" id="btnBorrar"></i><br /><a style="color: ThreeDDarkShadow">Borrar</a></td>
                                <td class="center"><i class="icon-search4 icon-custom-style" title="Editar" id="btnBuscar"></i><br /><a style="color: ThreeDDarkShadow">Buscar</a></td>
                            </tr>
                            @*<tr>
                                <td class="center cursor" id="btnNuevo">Nuevo</td>
                                <td class="center cursor" id="btnFin">Grabar</td>
                                <td class="center cursor" id="btnBorrar">Borrar</td>
                                <td class="center cursor" id="btnBuscar">Buscar</td>
                            </tr>*@
                        </table>

                        @*<i class="icon-sync position-left icon-custom-style " title="Refrescar" id="btnSimular"></i>*@
                        @*<i class="icon-floppy-disks position-left icon-custom-style " title="Guardar como" id="btnFin2"></i>*@
                        @*<i class="icon-x position-left icon-custom-style " title="Cancelar" id="btnCancelar"></i>*@

                        <!--<i class="icon-envelop4 position-left" style="font-size:25px"></i>-->
                        <div class="heading-elements">

                            <!--<ul class="icons-list">
        <li><a data-action="collapse"></a></li>
        <li><a data-action="reload"></a></li>
        <li><a data-action="close"></a></li>
                                </ul>-->
                        </div>
                    </div>

                    <div class="panel-body">


                        <div class="row">

                            <div class="col-md-5" style=" overflow-y: scroll !important; max-height: 50em;border-right: 1px solid #e8e7e7;">
                                <fieldset>
                                    <legend class="tipografia1 text-semibold"><i class="icon-user-tie position-left"></i> Detalle del Cliente o Prospecto</legend>
                                    <form id="FormSim">
                                        <label id="IdeClienteProducto" class="hidden">@Model.IdeClienteProducto</label>
                                        <label id="CodSuscriptor" class="hidden">@Model.CodSuscriptor</label>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="radio-inline">
                                                        <input type="radio" name="rbTipProspecto" value="1" checked="checked">
                                                        Cliente
                                                    </label>

                                                    <label class="radio-inline">
                                                        <input type="radio" name="rbTipProspecto" value="2">
                                                        Prospecto
                                                    </label>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Nombre o Razón Social</label>
                                                    <input type="text" id="txtNombreCliente" name="txtNombreCliente" class="form-control">
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Personería</label>
                                                    @Html.DropDownList("ddlPersoneria", Model.ddlPersoneria, new { @class = "select" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label>Tip. Doc.</label>
                                                    @Html.DropDownList("ddlTipDocumento", Model.ddlTipDocumento, new { @class = "select" })
                                                </div>
                                            </div>

                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label>Número Doc.</label>
                                                    <input type="text" id="txtNumDoc" name="txtNumDoc" class="form-control">
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Tipo Cliente:</label>
                                                    @Html.DropDownList("ddlTipCliente", Model.ddlTipCliente, new { @class = "select" })
                                                </div>
                                            </div>
                                        </div>

                                        <legend class="tipografia1 text-semibold"><i class=" icon-cash3 position-left"></i> Detalle de la Operación</legend>

                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Operación:</label>
                                                    @Html.DropDownList("ddlOperacion", Model.ddlOperacion, new { @class = "select" })
                                                </div>
                                            </div>

                                            <div class="col-md-5">
                                                <div class="form-group">
                                                    <label>Producto:</label>
                                                    @Html.DropDownList("ddlProducto", Model.ddlProducto, new { @class = "select" })
                                                </div>
                                            </div>

                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label>Moneda:</label>
                                                    @Html.DropDownList("ddlMoneda", Model.ddlMoneda, new { @class = "select" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-5">
                                                <div class="form-group">
                                                    <label>Amortización</label>
                                                    <input type="text" id="txtAmortizacion" value="" class="form-control" readonly />
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Monto:</label>
                                                    <div class="input-group">
                                                        <input type="text" id="txtMonto" name="txtMonto" min="0" value="0" class="form-control">
                                                        <span class="input-group-addon currency"></span>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label>Canal:</label>
                                                    @Html.DropDownList("ddlCanalAtencion", Model.ddlCanalAtencion, new { @class = "select" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Tasa Efectiva (Anual)</label>
                                                    <div class="input-group">
                                                        <input type="text" id="txtTasaEfectiva" name="txtTasaEfectiva" value="0" class="form-control">
                                                        <span class="input-group-addon">%</span>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Plazo en meses</label>
                                                    <input type="text" id="txtPlazoMeses" name="txtPlazoMeses" onkeypress="return event.charCode >= 48 && event.charCode <= 57" min="1" max="99" maxlength="2" step="1" class="form-control">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Clasificación Interna</label>
                                                    @Html.DropDownList("ddlClasificacionInterna", Model.ddlClasificacionInterna, new { @class = "select" })
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Clasificación Externa</label>
                                                    @Html.DropDownList("ddlClasificacionExterna", Model.ddlClasificacionExterna, new { @class = "select" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label>Comisiones de la operación</label>

                                                    <div class="table-responsive" style="overflow-y: scroll; max-height:22rem;">
                                                        <table class="table table-bordered">
                                                            <thead>
                                                                <tr class="headerTblColorPlomo">
                                                                    @*<th class="center" width="5%">#</th>*@
                                                                    <th class="center" width="30%">Servicio</th>
                                                                    <th class="center" width="15%">Periodicidad</th>
                                                                    <th class="center" width="10%">Veces</th>
                                                                    <th class="center" width="35%">Valor</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="tbodyComision"></tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                                <!-- /bordered table -->
                                            </div>
                                        </div>

                                        <legend class="tipografia1 text-semibold"><i class="icon-price-tag position-left"></i> Garantías</legend>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Real Mobiliaria</label>
                                                    @Html.DropDownList("ddlGarantiaReal", Model.ddlGarantiaReal, new { @class = "select" })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Monto Garantía:</label>
                                                    <input type="text" id="txtMontoGarantiaReal" name="txtMontoGarantiaReal" value="0" min="0" class="form-control">
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Moneda:</label>
                                                    @Html.DropDownList("ddlMonedaReal", Model.ddlMoneda, new { @class = "select" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Personales y Derivadas</label>
                                                    @Html.DropDownList("ddlGarantiaPersonal", Model.ddlGarantiaPersonal, new { @class = "select" })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Monto Garantía:</label>
                                                    <input type="text" id="txtMontoGarantiaPersonal" name="txtMontoGarantiaPersonal" value="0" min="0" class="form-control">
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Moneda:</label>
                                                    @Html.DropDownList("ddlMonedaPersonal", Model.ddlMoneda, new { @class = "select" })
                                                </div>
                                            </div>
                                        </div>


                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Rating del Garante</label>
                                                    @Html.DropDownList("ddlClasificacionGarantia", Model.ddlClasificacionGarantia, new { @class = "select" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Modelo RORAC</label>
                                                    <select id="ddlModeloRORAC" name="ddlModeloRORAC" class="select">
                                                        <option value="1" selected="selected">Modelo Estándar</option>
                                                        <option value="2">Modelo Básico IRB</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </fieldset>
                            </div>

                            <div class="col-md-7">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="tabbable">
                                            <ul class="nav nav-tabs">

                                                <li class="active"> <a id="Seccion01" href="#basic-tab1" data-toggle="tab">Estado Perdidas y Ganacias</a></li>
                                                <li>                <a id="Seccion02" href="#basic-tab2" data-toggle="tab">Tabla de Dispersión</a></li>
                                                <li>                <a id="Seccion03" href="#basic-tab3" data-toggle="tab">Gráfico de Composición</a></li>
                                                <li>                <a id="Seccion04" href="#basic-tab4" data-toggle="tab">Cronograma</a></li>
                                            </ul>

                                            <div class="tab-content">

                                                <div style="overflow-y: scroll !important; max-height: 50em;" class="tab-pane active" id="basic-tab1">
                                                    <fieldset>
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <div class="form-group">
                                                                    <div class="table-responsive">
                                                                        <table class="table tblRowsHeight table-borderless">
                                                                            <thead>
                                                                                <tr class="headerTblColorPlomo">
                                                                                    <th colspan="6" style="text-align:center;"><i class="icon-calculator2 position-left"></i> Contribución EGP (expresado en dólares)</th>
                                                                                </tr>
                                                                                <tr class="headerTblColorPlomo">
                                                                                    <th align="right"></th>
                                                                                    <th style="text-align: right">Operación</th>
                                                                                    <th style="text-align: right">Anual</th>
                                                                                    <th style="text-align: right">Trimestral</th>
                                                                                    <th style="text-align: right">Mensual</th>
                                                                                    <th style="text-align: right">Tasa</th>
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody id="tbodyPYG"></tbody>
                                                                        </table>
                                                                    </div>
                                                                </div>
                                                                <!-- /bordered table -->
                                                            </div>
                                                        </div>
                                                        <hr />

                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <div class="form-group">
                                                                    <div class="table-responsive">
                                                                        <table class="table tblRowsHeight table-borderless">
                                                                            <thead>
                                                                                <tr class="headerTblColorPlomo tipografia1">
                                                                                    <th colspan="6" style="text-align:center;"><i class="icon-newspaper position-left"></i> Resumen de Escenarios</th>
                                                                                </tr>
                                                                                <tr class="headerTblColorPlomo tipografia1">
                                                                                    <th></th>
                                                                                    <th style="text-align: right">Operación</th>
                                                                                    <th style="text-align: right">Base</th>
                                                                                    @*<th style="text-align: right">Riesgo</th>*@
                                                                                </tr>
                                                                            </thead>
                                                                            <tbody id="tbodyResEsc"></tbody>
                                                                        </table>
                                                                    </div>
                                                                </div>
                                                                <!-- /bordered table -->
                                                            </div>
                                                        </div>
                                                        <hr />


                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <div class="form-group">
                                                                    <div class="table-responsive">
                                                                        <table class="table tblRowsHeight table-borderless">
                                                                            <tbody id="tbodyRoracRes"></tbody>
                                                                        </table>
                                                                    </div>
                                                                </div>
                                                                <!-- /bordered table -->
                                                            </div>
                                                        </div>

                                                    </fieldset>
                                                </div>

                                                <div class="tab-pane" id="basic-tab2">
                                                    <fieldset>
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <div class="form-inline" style="margin-bottom:20px;">
                                                                    <div class="form-group">
                                                                        <select id="ddlRangoTasa" name="ddlRangoTasa" class="select">
                                                                            <option value="0.001" selected="selected">Tasa de 0.10%</option>
                                                                            <option value="0.0015">Tasa de 0.15%</option>
                                                                            <option value="0.0020">Tasa de 0.20%</option>
                                                                            <option value="0.0050">Tasa de 0.50%</option>
                                                                            <option value="0.01">Tasa de 1%</option>
                                                                            <option value="0.02">Tasa de 2.0%</option>
                                                                            <option value="0.03">Tasa de 3.0%</option>
                                                                        </select>
                                                                    </div>
                                                                    <div class="form-group">
                                                                        <select id="ddlRangoPlazo" name="ddlRangoPlazo" class="select">
                                                                            <option value="1" selected="selected">Plazo de 1 mes</option>
                                                                            <option value="2">Plazo de 2 meses</option>
                                                                            <option value="3">Plazo de 3 meses</option>
                                                                            <option value="4">Plazo de 4 meses</option>
                                                                            <option value="5">Plazo de 5 meses</option>
                                                                            <option value="6">Plazo de 6 meses</option>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                                <div class="hot-container">
                                                                    <div id="hot_alignment"></div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                </div>

                                                <div class="tab-pane" id="basic-tab3">
                                                    <fieldset>
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <canvas id="myChart"></canvas>
                                                            </div>
                                                        </div>
                                                        <hr />
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <canvas id="myChart2"></canvas>
                                                            </div>
                                                        </div>
                                                        <hr />
                                                        @*<div class="row">
                    <div class="col-md-12">
                        <canvas id="myChart3"></canvas>
                    </div>
                </div*@>

                                                    </fieldset>
                                                </div>
                                                <div class="tab-pane" id="basic-tab4">
                                                    <fieldset>
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <div class="table-responsive">
                                                                    <table class="table tblRowsHeight table-borderless">
                                                                        <tbody id="tbodyCalendario"></tbody>
                                                                    </table>
                                                                </div>
                                                            </div>
                                                            
                                                        </div>
                                                        <hr />
                                                    </fieldset>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>
        <!-- /content area -->
    </div>
    <!-- /main content -->
</div>


<script type="text/javascript">

    var fSeleccionar;
    var fComisionChange;
    var fOnAlertClose;
    var fOnInputBuscar;

    $(document).ready(function () {


        $('input,select').prop('disabled', true);
        $('#txtBuscar').prop('disabled', false);

        fOnAlertClose = function () {
            $("#alertSim").addClass('hidden');
        }

        fOnInputBuscar = function() {
            PlantillaDataTable.draw();
        }

        var PlantillaDataTable = $('#tblPOPUP').DataTable({
            autoWidth: false,
            responsive: true,
            searching: false,
            ordering: false,
            processing: true,
            serverSide: true,
            stateSave: false,
            lengthChange: false,
            info: false,
            firstAjax: false,
            language: {
                url: '//cdn.datatables.net/plug-ins/2.0.5/i18n/es-ES.json',
            },

            ajax: {
                url: urls.RENApi.GetDataTable_PopUp(),
                type: 'GET',
                data: function (data) {
                    var _filter = {
                        accion: '@@POPUP',
                        cod_suscriptor: $("#CodSuscriptor").text(),
                        buscar: $("#txtBuscar").val(),
                    };

                    var _order = $.map(data.order, function (item) {
                        return {
                            Property: data.columns[item.column].name,
                            Direction: item.dir
                        };
                    });

                    delete data.columns;
                    delete data.order;
                    delete data.search;

                    data.filter = _filter;
                    data.orderby = _order;
                }
            },
            columns: [
                {
                    title: "&nbsp;",
                    //orderable: false,
                    width: "5%",
                    render: function (data, type, full, meta) {
                        let str = "<a class='btn btn-default' onclick='fSeleccionar(" + full.ide_cliente_Producto + ")'>></a>";
                        return str;
                    },
                    responsivePriority: 0
                },
                {
                    title: 'Código',
                    data: 'codigo',
                    name: 'codigo',
                    className: 'dt-left',
                    width: "7%",
                },
                {
                    title: 'Tipo',
                    data: 'tip_documento',
                    name: 'tip_documento',
                    className: 'dt-left',
                    width: "7%",
                },
                {
                    title: 'Documento',
                    data: 'num_documento',
                    name: 'num_documento',
                    className: 'dt-left',
                    width: "7%",
                },
                {
                    title: 'Cliente',
                    data: 'Cliente',
                    name: 'Cliente',
                    className: 'dt-left',
                    width: "7%",
                },
                {
                    title: 'Producto',
                    data: 'Producto',
                    name: 'Producto',
                    className: 'dt-left',
                    width: "7%",
                },
                {
                    title: 'Monto',
                    data: 'Monto',
                    name: 'Monto',
                    className: 'dt-right',
                    width: "7%",
                },
                {
                    title: 'T. Base',
                    data: 'Tea_base',
                    name: 'Tea_base',
                    className: 'dt-center',
                    width: "20%",
                },
                {
                    title: 'T. Efectiva',
                    data: 'Tea_efectiva',
                    name: 'Tea_efectiva',
                    className: 'dt-center',
                    width: "7%",
                },
                {
                    title: 'Plazo',
                    data: 'plazo',
                    name: 'plazo',
                    className: 'dt-center',
                    width: "7%",
                },
                {
                    title: 'Profit',
                    data: 'Profit',
                    name: 'Profit',
                    className: 'dt-center',
                    width: "7%",
                },
                {
                    title: 'RORAC',
                    data: 'RORAC',
                    name: 'RORAC',
                    className: 'dt-center',
                    width: "7%",
                },
                {
                    title: 'Usuario',
                    data: 'cod_usuario',
                    name: 'cod_usuario',
                    className: 'dt-left',
                    width: "7%",
                },
                {
                    title: 'Fecha',
                    data: 'Fecha',
                    name: 'Fecha',
                    className: 'dt-left',
                    width: "7%",
                },
            ],

        });


        fSeleccionar = function (Id) {
            $('#editModal').modal('hide');
            $("#overlay").show();
            $.getJSON('@Url.Action("JSON_Get")', { IdeClienteProducto: Id }, function (data) {
                //$("#btnNuevo,#btnBuscar").addClass("hidden");
                //$("#btnSimular,#btnFin,#btnFin2,#btnCancelar,#btnBorrar").removeClass("hidden");
                var simData = data.simData;
                $("#IdeClienteProducto").text(simData.ide_cliente_producto);
                $("input:radio[name=rbTipProspecto][value=" + simData.cod_tip_prospecto + "]").prop('checked', true);
                $("#txtNombreCliente").val(simData.nom_cliente);
                $("#ddlMoneda").val(simData.cod_moneda).trigger('change', 'fSeleccionar');
                $("#ddlCanalAtencion").val(simData.cod_canal_atencion).trigger('change', 'fSeleccionar');
                $("#txtMonto").val(simData.monto).trigger('change', 'fSeleccionar');
                $("#txtTasaEfectiva").val(getPorcentajeNum(simData.tea)).trigger('change', 'fSeleccionar');
                $("#txtPlazoMeses").val(simData.plazo).trigger('change', 'fSeleccionar');

                $("#ddlPersoneria").val(simData.cod_personeria).trigger('change', [simData]);
                $("#ddlOperacion").val(simData.cod_operacion).trigger('change', [simData]);

                $("#txtMontoGarantiaReal").val(simData.monto_garantia_real).trigger('change', 'fSeleccionar');
                $("#txtMontoGarantiaPersonal").val(simData.monto_garantia_personal).trigger('change', 'fSeleccionar');
                $("#ddlMonedaReal").val(simData.cod_moneda_garantia_real).trigger('change', 'fSeleccionar');
                $("#ddlMonedaPersonal").val(simData.cod_moneda_garantia_personal).trigger('change', 'fSeleccionar');

                $("#ddlModeloRORAC").val(simData.cod_modelo_rorac).trigger('change', 'fSeleccionar');
                construirComision(data.dataComision);

                reconstruirReportePYG(data);
                reconstruirReporteResumenEscenario(data);
                reconstruirReporteRoracRes(data);
                //reconstruirHandsontable(data);
                //updateChart1(data.dataComposicion);
                //updateChart2(data.dataComposicion);
                //updateChart3(data.dataComposicion);

                //$("#txtAmortizacion").val(data.simData.tip_amortizacion);
                $("#txtAmortizacion").val(data.amortizacion);
            }).done(function () {
                $('input,select').prop('disabled', false);
                $("#Seccion01").click();
                $("#overlay").hide();
            });
        }

        /** DLL CHANGES */
        $("#ddlPersoneria").change(function (e, data) {
            ddlPersoneriaChange(data);
        });
        $("#ddlOperacion").change(function (e, data) {
            ddlOperacionChange(data);
        });
        $("#ddlProducto").change(function (e, data) {
            ddlProductoChange(data);
        });
        function ddlPersoneriaChange(info) {
            let codPersoneria = $("#ddlPersoneria option:selected").val();
            if (info != undefined && info != null) {
                if (info == "clean") {
                    return;
                }
                codPersoneria = info.cod_personeria;
            }
            $.getJSON('@Url.Action("JSON_PersoneriaChange")', { codPersoneria: codPersoneria }, function (data) {
                $('#ddlTipDocumento').empty();
                $.each(data.ddlTipDocumento, function (index, item) {
                    $('#ddlTipDocumento').append($('<option/>', {
                        value: item.Value,
                        text: item.Text,
                        selected: item.Selected
                    }));
                });

                $('#ddlTipCliente').empty();
                $.each(data.ddlTipCliente, function (index, item) {
                    $('#ddlTipCliente').append($('<option/>', {
                        value: item.Value,
                        text: item.Text,
                        selected: item.Selected
                    }));
                });
            }).done(function () {
                if (info != undefined && info != null) {
                    $("#ddlTipDocumento").val(info.cod_tip_documento).trigger('change', 'fSeleccionar');
                    $("#txtNumDoc").val(info.num_documento).trigger('change', 'fSeleccionar');
                    $("#ddlTipCliente").val(info.cod_tip_cliente).trigger('change', 'fSeleccionar');
                }
            });
        }
        function ddlOperacionChange(info) {
            let codOperacion = $("#ddlOperacion option:selected").val();
            let codTipCliente = $("#ddlTipCliente option:selected").val();
            if (info != undefined && info != null) {
                if (info == "clean") {
                    return;
                }
                codOperacion = info.cod_operacion;
                codTipCliente = info.cod_tip_cliente;
            }
            $.getJSON('@Url.Action("JSON_OperacionChange")', { ide_cliente_producto: $("#IdeClienteProducto").text(), codOperacion: codOperacion, codTipCliente: codTipCliente }, function (data) {
                $('#ddlProducto').empty();
                if (info == undefined) {
                    $('#tbodyComision').empty();
                }
                $.each(data.ddlProducto, function (index, item) {
                    $('#ddlProducto').append($('<option/>', {
                        value: item.Value,
                        text: item.Text,
                        selected: item.Selected
                    }));
                });

                $('#ddlClasificacionInterna').empty();
                $.each(data.ddlClasificacionInterna, function (index, item) {
                    $('#ddlClasificacionInterna').append($('<option/>', {
                        value: item.Value,
                        text: item.Text,
                        selected: item.Selected
                    }));
                });
                $('#ddlClasificacionExterna').empty();
                $.each(data.ddlClasificacionExterna, function (index, item) {
                    $('#ddlClasificacionExterna').append($('<option/>', {
                        value: item.Value,
                        text: item.Text,
                        selected: item.Selected
                    }));
                });
                $('#ddlGarantiaReal').empty();
                $.each(data.ddlGarantiaReal, function (index, item) {
                    $('#ddlGarantiaReal').append($('<option/>', {
                        value: item.Value,
                        text: item.Text,
                        selected: item.Selected
                    }));
                });
                $('#ddlGarantiaPersonal').empty();
                $.each(data.ddlGarantiaPersonal, function (index, item) {
                    $('#ddlGarantiaPersonal').append($('<option/>', {
                        value: item.Value,
                        text: item.Text,
                        selected: item.Selected
                    }));
                });
                $('#ddlClasificacionGarantia').empty();
                $.each(data.ddlClasificacionGarantia, function (index, item) {
                    $('#ddlClasificacionGarantia').append($('<option/>', {
                        value: item.Value,
                        text: item.Text,
                        selected: item.Selected
                    }));
                });

                let disabled = false;
                if (codOperacion == "DEP") {
                    disabled = true;
                    $('#txtMontoGarantiaReal,#txtMontoGarantiaPersonal').val('');
                    $("#ddlMonedaReal,#ddlMonedaPersonal").val('').trigger('change', 'fSeleccionar');
                }
                $('#ddlGarantiaReal').prop('disabled', disabled);
                $('#ddlGarantiaPersonal').prop('disabled', disabled);
                $('#txtMontoGarantiaReal').prop('disabled', disabled);
                $('#txtMontoGarantiaPersonal').prop('disabled', disabled);
                $('#ddlMonedaReal').prop('disabled', disabled);
                $('#ddlMonedaPersonal').prop('disabled', disabled);
                $('#ddlClasificacionGarantia').prop('disabled', disabled);
            }).done(function () {
                if (info != undefined && info != null) {
                    $("#ddlProducto").val(info.cod_producto).trigger('change', [info]);
                    $("#ddlClasificacionInterna").val(info.cod_clasificacion_interna).trigger('change', 'fSeleccionar');
                    $("#ddlClasificacionExterna").val(info.cod_clasificacion_externa).trigger('change', 'fSeleccionar');
                    $("#ddlGarantiaReal").val(info.cod_garantia_real).trigger('change', 'fSeleccionar');
                    $("#ddlGarantiaPersonal").val(info.cod_garantia_personal).trigger('change', 'fSeleccionar');
                    $("#ddlClasificacionGarantia").val(info.cod_clasificacion_garantia).trigger('change', 'fSeleccionar');

                }

            });
        }
        function ddlProductoChange(info) {
            let codProducto = $("#ddlProducto option:selected").val();
            if (info != undefined && info != null) {
                if (info == "clean") {
                    return;
                }
                codProducto = info.cod_producto;
            } else {
                fnGrabar('simular');
                @*$.getJSON('@Url.Action("JSON_ProductoChange")', { ide_cliente_producto: $("#IdeClienteProducto").text(), codProducto: codProducto }, function (data) {
                    construirComision(data.dataComision);
                    $("#txtAmortizacion").val(data.amortizacion);
                }).done(function () {
                    if (info != undefined && info != null) {

                    } else {
                        fnGrabar('simular');
                    }
                });*@
            }

        }

        /** FIN DLL CHANGES */

        function getPorcentaje(valor) {
            if (isNaN(valor)) {
                return 0;
            }
            let tasa = Number(valor);
            if (tasa == 0) {
                return 0;
            }
            return tasa / 100.0;
        }
        function getPorcentajeNum(valor) {
            if (isNaN(valor)) {
                return 0;
            }
            let tasa = Number(valor);
            if (tasa == 0) {
                return 0;
            }
            return tasa * 100.0;
        }
        function getImporte(valor) {
            let _valor = valor.replace(/,/g, '');
            if (isNaN(_valor)) {
                return 0;
            }
            let monto = Number(_valor);

            return monto;
        }

        /** RECONSTRUCCIONES */
        function reconstruirReportePYG(data) {
            $("#tbodyPYG").empty();
            if (data.dataPYG == undefined || data.dataPYG == null) return;
            var cadena = "";
            $.each(data.dataPYG, function (index, item) {
                var trClass = "";
                if (item.color == "beige") {
                    trClass = "colorBeige";
                }
                if (item.color == "gray") {
                    trClass = "colorGray";
                }
                if (item.color == "dark") {
                    trClass = "colorDark";
                }
                cadena += "<tr class=" + trClass + ">";
                cadena += "<td align='left'>" + item.detalle + "</td>";
                //cadena += "<td align='right'>" + numeral(item.operacion).format('0,0') + "</td>";
                //cadena += "<td align='right'>" + numeral(item.anual).format('0,0') + "</td>";
                //cadena += "<td align='right'>" + numeral(item.trimestral).format('0,0') + "</td>";
                //cadena += "<td align='right'>" + numeral(item.mensual).format('0,0.00') + "</td>";
                //cadena += "<td align='right'>" + numeral(item.ratio).format('0.00%') + "</td>";
                cadena += "<td align='right'>" + item.strOperacion + "</td>";
                cadena += "<td align='right'>" + item.strAnual + "</td>";
                cadena += "<td align='right'>" + item.strTrimestral + "</td>";
                cadena += "<td align='right'>" + item.strMensual + "</td>";
                cadena += "<td align='right'>" + item.strRatio + "</td>";
                cadena += "</tr>";
            });
            $("#tbodyPYG").append(cadena);
        }
        function reconstruirReporteResumenEscenario(data) {
            $("#tbodyResEsc").empty();
            if (data.dataResEsc == undefined || data.dataResEsc == null) return;
            var cadena = "";
            $.each(data.dataResEsc, function (index, item) {
                var trClass = "";
                if (item.color == "beige") {
                    trClass = "colorBeige";
                }
                if (item.color == "gray") {
                    trClass = "colorGray";
                }
                if (item.color == "dark") {
                    trClass = "colorDark";
                }
                var _numOpe = 0;
                var _numObj = 0;
                //var _numPrima = 0;

                if (item.formato == "%2") {
                    _numOpe = numeral(item.operacion).format('0.00%');
                    _numObj = numeral(item.objetivo).format('0.00%');
                    //_numPrima = numeral(item.primaRiesg).format('0.00%');
                }
                else if (item.formato == "%3") {
                    _numOpe = numeral(item.operacion).format('0.000%');
                    _numObj = numeral(item.objetivo).format('0.000%');
                    //_numPrima = numeral(item.primaRiesg).format('0.000%');
                }
                else {
                    _numOpe = numeral(item.operacion).format('0,0');
                    _numObj = numeral(item.objetivo).format('0,0');
                    //_numPrima = numeral(item.primaRiesg).format('0,0');
                }

                cadena += "<tr class=" + trClass + ">";
                cadena += "<td align='left'>" + item.detalle + "</td>";
                cadena += "<td align='right'>" + _numOpe + "</td>";
                cadena += "<td align='right'>" + _numObj + "</td>";
                //cadena += "<td align='right'>" + _numPrima + "</td>";;
                cadena += "</tr>";
            });
            $("#tbodyResEsc").append(cadena);
        }
        function reconstruirReporteRoracRes(data) {
            $("#tbodyRoracRes").empty();
            if (data.dataRoracRes == undefined || data.dataRoracRes == null) return;
            var cadena = "";
            $.each(data.dataRoracRes, function (index, item) {
                if (item.estilo == "TIT01" || item.estilo == "TIT02") {
                    cadena += "<tr class='colorDark'><td align='center' colspan='6' class='text-semibold'>" + item.detalle + "</td></tr>";
                } else if (item.estilo == "" && item.detalle == "") {
                    cadena += "<tr><td colspan='6'>&nbsp;</td></tr>";
                } else if (item.estilo == "") {
                    cadena += "<tr><td colspan='6' class='text-semibold'>" + item.detalle + "</td></tr>";
                } else if (item.estilo == "NORMAL") {
                    cadena += "<tr>";
                    cadena += "<td align='left'>" + item.detalle + "</td>";
                    if (item.formato == "###,####,###") {
                        cadena += "<td align='right'>" + numeral(item.res01).format('0,0') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res02).format('0,0') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res03).format('0,0') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res04).format('0,0') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res05).format('0,0') + "</td>";
                    } else if (item.formato == "##,##0.00%") {
                        cadena += "<td align='right'>" + numeral(item.res01).format('0.00%') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res02).format('0.00%') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res03).format('0.00%') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res04).format('0.00%') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res05).format('0.00%') + "</td>";
                    }
                    cadena += "</tr>";
                } else if (item.estilo == "TIT05") {
                    cadena += "<tr class='colorBeige'>";
                    cadena += "<td align='left'>" + item.detalle + "</td>";
                    if (item.formato == "###,####,###") {
                        cadena += "<td align='right'>" + numeral(item.res01).format('0,0') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res02).format('0,0') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res03).format('0,0') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res04).format('0,0') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res05).format('0,0') + "</td>";
                    } else if (item.formato == "##,##0.00%") {
                        cadena += "<td align='right'>" + numeral(item.res01).format('0.00%') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res02).format('0.00%') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res03).format('0.00%') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res04).format('0.00%') + "</td>";
                        cadena += "<td align='right'>" + numeral(item.res05).format('0.00%') + "</td>";
                    }
                    cadena += "</tr>";
                }

            });
            $("#tbodyRoracRes").append(cadena);
        }
        function reconstruirHandsontable(data) {
            if (data.dataRoracTbl == undefined || data.dataRoracTbl == null) return;
            if (hot_alignment_init) {
                var dataHot = [
                    { col0: '', col1: 'RORAC Bajo Modelo Estándar', col2: '', col3: '', col4: '', col5: '', col6: '', col7: '', col8: '', col9: '', col10: '' },
                    { col0: '(Plazo en  Meses de la Operación)', col1: '(Tasa efectiva Anual de La Operación)', col2: '', col3: '', col4: '', col5: '', col6: '', col7: '', col8: '', col9: '', col10: '' },
                ];

                $.each(data.dataRoracTbl, function (index, item) {
                    var feed = {
                        col0: '', col1: item.plazo, col2: numeral(item.valor1).format('0.00%'), col3: numeral(item.valor2).format('0.00%')
                        , col4: numeral(item.valor3).format('0.00%'), col5: numeral(item.valor4).format('0.00%')
                        , col6: numeral(item.valor5).format('0.00%'), col7: numeral(item.valor6).format('0.00%')
                        , col8: numeral(item.valor7).format('0.00%'), col9: numeral(item.valor8).format('0.00%')
                        , col10: numeral(item.valor9).format('0.00%')
                    };
                    dataHot.push(feed)
                });

                roracObjetivo = 0.0;
                roracAutonomia = 0.0;
                roracMenosObjetivo = 0.0;
                if (data.dataRorac != null) {
                    roracObjetivo = data.dataRorac.rorac_objetivo;
                    roracAutonomia = data.dataRorac.autonomia_comercial;
                }
                roracMenosObjetivo = roracObjetivo - roracAutonomia;

                hot_alignment_init.loadData(dataHot);
                hot_alignment_init.render();
                return;
            }
        }
        function updateChart1(data) {
            if (data == undefined || data == null) return;
            let dat = data.filter(a => a.tipo == 1);
            let labels = dat.map(x => x.detalle);
            let values = dat.map(x => x.valor);
            let inv = dat.map(x => x.invisible);
            let neg = dat.map(x => x.negativo);

            myChart.data.labels = labels;
            //myChart.data.datasets.forEach((dataset) => {
            //    dataset.data = values;
            //});
            myChart.data.datasets[0].data = inv;
            myChart.data.datasets[1].data = neg;
            myChart.update();
        }
        function updateChart2(data) {
            if (data == undefined || data == null) return;
            let dat = data.filter(a => a.tipo == 2);
            let labels = dat.map(x => x.detalle);
            let values = dat.map(x => x.valor);
            let inv = dat.map(x => x.invisible);
            let neg = dat.map(x => x.negativo);

            myChart2.data.labels = labels;
            //myChart2.data.datasets.forEach((dataset) => {
            //dataset.data = values;
            //});
            myChart2.data.datasets[0].data = inv;
            myChart2.data.datasets[1].data = neg;
            myChart2.update();
        }
        function updateChart3(data) {
            if (data == undefined || data == null) return;
            let dat = data.filter(a => a.tipo == 3);
            let labels = dat.map(x => x.detalle);
            let values = dat.map(x => x.valor);
            let inv = dat.map(x => x.invisible);
            let neg = dat.map(x => x.negativo);

            myChart3.data.labels = labels;
            myChart3.data.datasets[0].data = inv;
            myChart3.data.datasets[1].data = neg;
            myChart3.update();
        }
        /** FIN RECONSTRUCCIONES */

        var jsModel = @Html.Raw(Json.Encode(Model));
        var dataHot = [
            { col0: '', col1: 'RORAC Bajo Modelo Estándar', col2: '', col3: '', col4: '', col5: '', col6: '', col7: '', col8: '', col9: '', col10: '' },
            { col0: '(Plazo en  Meses de la Operación)', col1: '(Tasa efectiva Anual de La Operación)', col2: '', col3: '', col4: '', col5: '', col6: '', col7: '', col8: '', col9: '', col10: '' },
        ];
        var roracObjetivo = 0.0;
        var roracAutonomia = 0.0;
        var roracMenosObjetivo = 0.0;
        if (jsModel.dataRorac != null) {
            roracObjetivo = jsModel.dataRorac.rorac_objetivo;
            roracAutonomia = jsModel.dataRorac.autonomia_comercial;

            $.each(jsModel.dataRoracTbl, function (index, item) {
                var feed = {
                    col0: '', col1: item.plazo, col2: numeral(item.valor1).format('0.00%'), col3: numeral(item.valor2).format('0.00%')
                    , col4: numeral(item.valor3).format('0.00%'), col5: numeral(item.valor4).format('0.00%')
                    , col6: numeral(item.valor5).format('0.00%'), col7: numeral(item.valor6).format('0.00%')
                    , col8: numeral(item.valor7).format('0.00%'), col9: numeral(item.valor8).format('0.00%')
                    , col10: numeral(item.valor9).format('0.00%')
                };
                dataHot.push(feed)
            });
        }
        var roracMenosObjetivo = roracObjetivo - roracAutonomia;

        // Ini Handsontable
        var hot_alignment = document.getElementById('hot_alignment');
        var hot_alignment_init = new Handsontable(hot_alignment, {
            data: dataHot,
            rowHeaders: false,
            colHeaders: false,
            //rowHeights: 23,
            //colWidths: 100,
            licenseKey: 'non-commercial-and-evaluation',
            colWidths: [30, 30, 80, 80, 80, 80, 80, 80, 80, 80, 80],
            //rowHeight: function (row) {
            //    if (row == 0) {
            //        return 10;
            //    } else {
            //        return 50;
            //    }

            //},
            //contextMenu: true,
            autoWrapRow: true,
            autoWrapCol: true,
            /*stretchH: 'all',*/
            mergeCells: [
                { row: 0, col: 1, rowspan: 1, colspan: 10 },
                { row: 1, col: 0, rowspan: 11, colspan: 1 },
                { row: 1, col: 1, rowspan: 1, colspan: 10 }
            ],
            className: "htRight",
            //colHeaders: ['ID', 'Name', 'IP', 'E-mail'],
            columns: [
                { data: 'col0' },
                { data: 'col1', className: 'htLeft' },
                { data: 'col2' },
                { data: 'col3' },
                { data: 'col4' },
                { data: 'col5' },
                { data: 'col6' },
                { data: 'col7' },
                { data: 'col8' },
                { data: 'col9' },
                { data: 'col10' },
            ],
        });
        hot_alignment_init.updateSettings({
            cells: function (row, col, prop) {
                var cell = hot_alignment_init.getCell(row, col);   // get the cell for the row and column
                if (cell != undefined && cell != null) {
                    if ((row == 0 && col == 0) || (row == 0 && col == 1) || (row == 1 && col == 0) || (row == 1 && col == 1)) {
                        cell.style.backgroundColor = "#54585b"; // plomo
                        cell.style.borderColor = "#54585b";
                        cell.style.color = "white";
                        //cell.style.align = "center";
                    }
                    if (row == 1 && col == 0) {
                        cell.style.overflowWrap = "break-word";
                        cell.style.writingMode = "vertical-rl";
                        cell.style.textAlign = "center";
                    }
                    if (row > 2 && col > 1) {
                        var value = parseFloat(cell.innerHTML) / 100.0;
                        if (value <= 0) { // regla rojo
                            cell.style.backgroundColor = "#812b2e";
                            cell.style.borderColor = "#812b2e";
                            cell.style.color = "white";
                        } else if (value > 0 && value < roracMenosObjetivo) { // regla beige
                            cell.style.backgroundColor = "#969076";
                            cell.style.borderColor = "#969076";
                        } else if (value >= roracMenosObjetivo && value < roracObjetivo) { // regla blanco
                            cell.style.backgroundColor = "white";
                            cell.style.borderColor = "white";
                            cell.style.color = "black";
                        } else if (value >= roracObjetivo) { // regla azul
                            cell.style.backgroundColor = "#222840";
                            cell.style.borderColor = "#222840";
                            cell.style.color = "white";
                        }

                    }
                }

            }
        });

        function fnCleanControles() {
            $("#tbodyComision").empty();
            $('#FormSim input:text').val('').trigger('change', 'clean');
            $('#FormSim select').val('').trigger('change', 'clean');

            let cadenalimp = "#ddlTipDocumento,#ddlTipCliente,#ddlProducto,#ddlClasificacionInterna,#ddlClasificacionExterna,#ddlGarantiaReal,#ddlGarantiaPersonal,#ddlClasificacionGarantia";
            $(cadenalimp).empty();
        }
        function fnCleanReports() {
            $("#tbodyPYG").empty();
            $("#tbodyResEsc").empty();
            $("#tbodyRoracRes").empty();
            if (hot_alignment_init) {
                hot_alignment_init.updateSettings({
                    data: []
                });
            }
            myChart.data.datasets[0].data = [];
            myChart.data.datasets[1].data = [];
            myChart2.data.datasets[0].data = [];
            myChart2.data.datasets[1].data = [];
            //myChart3.data.datasets[0].data = [];
            //myChart3.data.datasets[1].data = [];

            myChart.update();
            myChart2.update();
            //myChart3.update();
        }

        /** BOTONES */
        $("#btnNuevo").on("click", function () {
            fOnAlertClose();
            fnNuevo();
        });
        $("#btnCancelar").on("click", function () {
            fnGrabar('cancelar');
        });
        $("#btnBorrar").on("click", function () {
            $('#confirmModal').modal('show'); 
            //fnGrabar('borrar');
        });
        $("#btnConfirmarBorrar").on("click", function () {
            $('#confirmModal').modal('hide');
            fnGrabar('borrar');
        });
        $("#btnBuscar").on("click", function () {
            $("#overlay").show();
            PlantillaDataTable.draw();
            $("#overlay").hide();
            $('#editModal').modal('show');
            $("#txtBuscar").val('');
            $('#txtBuscar').prop('disabled', false);
        });
        $("#btnSimular").on("click", function () {
            fnGrabar('simular');
        });
        $("#btnFin").on("click", function () {
            fnGrabar('fin');
        });
        $("#btnFin2").on("click", function () {
            fnGrabar('fin2');
        });

        $('#txtMonto,#txtMontoGarantiaReal,#txtMontoGarantiaPersonal').inputmask({
            'alias': 'decimal',
            'groupSeparator': ',',
            'autoGroup': true,
            'digits': 2,
            'digitsOptional': false,
            'placeholder': '0.00'
        });
        $("#txtTasaEfectiva").inputmask({
            alias: "decimal",
            radixPoint: ".",
            digits: "2",
            rightAlign: false,
            integerDigits: 5,
            digitsOptional: true,
            allowPlus: true,
            allowMinus: true,
            placeholder: "0",
            min: 0,
            max: 100,
            numericInput: true
        });

        function fnNuevo() {
            $("#overlay").show();
            var _url = '@Url.Action("New", "REN")';
            $.post(_url).done(function (data) {
                if (data.Status === 200) {

                    fnCleanControles();
                    fnCleanReports();
                    //$("#btnSimular,#btnFin,#btnCancelar,#btnBorrar").removeClass("hidden");
                    //$("#btnNuevo,#btnBuscar").addClass("hidden");

                    toastr.success('Nueva simulación aperturada');
                    $('input,select').prop('disabled', false);
                    $("#IdeClienteProducto").text(data.Data.simData.ide_cliente_producto);
                    construirComision(data.Data.dataComision);
                }
                else {
                    toastr.error(data.Message);
                }
            }).fail(function (e) {
            }).always(function () {
                $("#Seccion01").click();
                $("#overlay").hide();
            });
        }

        function getComisionPeriodo(data) {
            let cadena = "<select id='ddlComisionPeriodo" + data.ide_comision + "' onchange='fComisionChange(" + JSON.stringify(data) + ")' class='form-control'>";
            let split1 = data.cPeriodicidad.replaceAll('><', '|').replaceAll('<', '').replaceAll('>', '').split('|');
            $.each(split1, function (index, value) {
                let split2 = value.split(',');
                cadena += "<option value='" + split2[0] + "'>" + split2[1] + "</option>"
            });
            cadena += "</select>";
            return cadena;
        }
        function getComisionVeces(data) {
            let valor = data.veces;
            let cadena = "<input type='number' id='txtComisionVeces" + data.ide_comision + "' onchange='fComisionChange(" + JSON.stringify(data) + ")' class='form-control' ";
            if (valor == undefined || valor == null) {
                valor = 0;
            }
            cadena += " value='" + valor + "'>";
            return cadena;
        }
        function getComisionValor(data, moneda) {
            let tipValor = data.tip_valor;
            let className = '';
            let valor = 0.0;
            let simbolo = "";
            let addon = ""
            if (tipValor != null) {
                if (tipValor == "V") {
                    valor = data.valor;
                    className = 'maskNumber';
                    simbolo = moneda;
                    addon = "currency";
                }
                if (tipValor == "%") {
                    valor = getPorcentajeNum(data.valor);
                    className = 'maskPercent';
                    simbolo = "%";
                }
            }
            let cadena = "<div class='input-group'>";
            cadena += "<input type='text' id='txtComisionValor" + data.ide_comision + "' onchange='fComisionChange(" + JSON.stringify(data) + ")' class='form-control " + className + " ' ";
            if (valor == undefined || valor == null) {
                valor = 0;
            }
            cadena += " value='" + valor + "'>";
            cadena += "<span class='input-group-addon " + addon + "'>" + simbolo + "</span>";
            cadena += "</div>";
            return cadena;
        }
        fComisionChange = function (data) {
            $("#overlay").show();
            let codPeriodo = $("#ddlComisionPeriodo" + data.ide_comision + " option:selected").val();
            let valor = 0.0;
            let veces = $("#txtComisionVeces" + data.ide_comision).val()

            if (data.tip_valor == "V") {
                valor = getImporte($("#txtComisionValor" + data.ide_comision).val());
            } else if (data.tip_valor == "%") {
                valor = getPorcentaje($("#txtComisionValor" + data.ide_comision).val());
            } else {
                valor = getImporte($("#txtComisionValor" + data.ide_comision).val());
            }

            var _obj = {
                accion: 'GRABAR',
                ide_cliente_producto: $("#IdeClienteProducto").text(),
                ide_comision: data.ide_comision,
                cod_periodicidad: codPeriodo,
                tip_valor: data.tip_valor,
                veces: veces,
                valor: valor,
                incremento_tasa: $("#ddlRangoTasa option:selected").val(),
                incremento_plazo: $("#ddlRangoPlazo option:selected").val(),
            };

            var _reply = {
                ACCION: 'GRABAR',
                MENSAJE: '',
                DATA: JSON.stringify(_obj),
            };
            var _url = '@Url.Action("EditComision", "REN")';

            $.post(_url, _reply).done(function (data) {
                if (data.Status === 200) {
                    //toastr.success('Comisión Actualizada');
                    reconstruirReportePYG(data.Data);
                    reconstruirReporteResumenEscenario(data.Data);
                    reconstruirReporteRoracRes(data.Data);
                    //reconstruirHandsontable(data.Data);
                    //updateChart1(data.Data.dataComposicion);
                    //updateChart2(data.Data.dataComposicion);
                    //updateChart3(data.Data.dataComposicion);
                }
                else {
                    toastr.error(data.Message);
                }
            }).fail(function (e) {
            }).always(function () {
                $("#Seccion01").click();
                $("#overlay").hide();
            });

        }

        function construirComision(data) {
            let cadena = "";
            $('#tbodyComision').empty();

            let _moneda = $("#ddlMoneda option:selected").val();
            let currency = "";
            if (_moneda == 0) {
                currency = "S/."
            }
            if (_moneda == 1) {
                currency = "$"
            }

            $.each(data, function (index, item) {
                cadena += "<tr>";
                /*cadena += "<td align='center'>" + item.ide_comision + "</td>";*/
                cadena += "<td align='left'>" + item.comision_servicio + "</td>";
                cadena += "<td align='center'>" + getComisionPeriodo(item) + "</td>";
                cadena += "<td align='center'>" + getComisionVeces(item) + "</td>";
                cadena += "<td align='center'>" + getComisionValor(item, currency) + "</td>";
                cadena += "</tr>";
            });
            $("#tbodyComision").append(cadena);

            $('input.maskNumber').inputmask({
                'alias': 'decimal',
                'groupSeparator': ',',
                'autoGroup': true,
                'digits': 2,
                'digitsOptional': false,
                'placeholder': '0.00'
            });
            $("input.maskPercent").inputmask({
                alias: "decimal",
                radixPoint: ".",
                digits: "2",
                rightAlign: false,
                integerDigits: 5,
                digitsOptional: true,
                allowPlus: true,
                allowMinus: true,
                placeholder: "0",
                min: 0,
                max: 100,
                numericInput: true
            });
        }

        function fnGrabar(act) {
            fOnAlertClose();
            let monto = getImporte($("#txtMonto").val());
            let tea = getPorcentaje($("#txtTasaEfectiva").val());
            let plazo = Number($("#txtPlazoMeses").val());
            let tipoDoc = $("#ddlTipDocumento option:selected").val();
            let numDoc = $("#txtNumDoc").val();
            /*
            if (tipoDoc == 1) { // ruc
                if (numDoc.length != 11) {
                    toastr.warning('RUC debe contener 11 dígitos');
                    return;
                }
            }
            if (tipoDoc == 2) { // dni
                if (numDoc.length != 8) {
                    toastr.warning('DNI debe contener 8 dígitos');
                    return;
                }
            }

            if (monto == 0) {
                toastr.warning('Ingresar valor monto');
                return;
            }
            if (tea == 0) {
                toastr.warning('Ingresar valor tea');
                return;
            }
            if (plazo == 0) {
                toastr.warning('Ingresar valor plazo meses');
                return;
            }
            */

            var action = '@@GRABAR';
            if (act == 'simular') {
                action = '@@GRABAR';
            }
            if (act == 'fin') {
                action = '@@FIN';
            }
            if (act == 'fin2') {
                action = '@@FIN2';
            }
            if (act == 'cancelar') {
                action = '@@CANCELAR';
            }
            if (act == 'borrar') {
                action = '@@BORRAR';
            }

            $("#overlay").show();
            var _obj = {
                accion: action,
                ide_cliente: 1,
                cod_tip_documento: tipoDoc,
                num_documento: numDoc,
                nom_cliente: $("#txtNombreCliente").val(),
                cod_personeria: $("#ddlPersoneria option:selected").val(),
                cod_tip_cliente: $("#ddlTipCliente option:selected").val(),
                cod_tip_prospecto: $('input:radio[name=rbTipProspecto]:checked').val(),
                ide_cliente_producto: $("#IdeClienteProducto").text(),
                cod_producto: $("#ddlProducto option:selected").val(),
                cod_operacion: $("#ddlOperacion option:selected").val(),
                cod_moneda: $("#ddlMoneda option:selected").val(),
                monto: monto,
                cod_canal_atencion: $("#ddlCanalAtencion option:selected").val(),
                tea: tea,
                plazo: plazo,
                cod_clasificacion_interna: $("#ddlClasificacionInterna option:selected").val(),
                cod_clasificacion_externa: $("#ddlClasificacionExterna option:selected").val(),
                cod_garantia_real: $("#ddlGarantiaReal option:selected").val(),
                cod_moneda_garantia_real: $("#ddlMonedaReal option:selected").val(),
                monto_garantia_real: getImporte($("#txtMontoGarantiaReal").val()),
                cod_garantia_personal: $("#ddlGarantiaPersonal option:selected").val(),
                cod_moneda_garantia_personal: $("#ddlMonedaPersonal option:selected").val(),
                monto_garantia_personal: getImporte($("#txtMontoGarantiaPersonal").val()),
                cod_clasificacion_garantia: $("#ddlClasificacionGarantia option:selected").val(),
                cod_modelo_rorac: $("#ddlModeloRORAC option:selected").val(),
                incremento_tasa: $("#ddlRangoTasa option:selected").val(),
                incremento_plazo: $("#ddlRangoPlazo option:selected").val(),
            };

            var _reply = {
                ACCION: action,
                MENSAJE: '',
                IDE_USUARIO: 0,
                DATA: JSON.stringify(_obj),
            };

            var _url = '@Url.Action("Edit", "REN")';

            $.post(_url, _reply).done(function (data) {
                if (data.Status === 200) {
                    //toastr.success(data.Message);
                    if (act == 'fin' || act == 'fin2' || act == 'cancelar' || act == 'borrar') {
                        $("#IdeClienteProducto").text('0');
                        if (act != 'cancelar') {
                            fnCleanControles();
                        }
                        fnCleanReports();
                        //$("#btnSimular,#btnFin,#btnFin2,#btnCancelar,#btnBorrar").addClass("hidden");
                        //$("#btnNuevo,#btnBuscar").removeClass("hidden");
                        $('input,select').prop('disabled', true);
                    }

                    if (act == 'simular') {
                        construirComision(data.Data.dataComision);
                        $("#txtAmortizacion").val(data.Data.amortizacion);

                        reconstruirReportePYG(data.Data);
                        reconstruirReporteResumenEscenario(data.Data);
                        reconstruirReporteRoracRes(data.Data);
                        //reconstruirHandsontable(data.Data);
                        //updateChart1(data.Data.dataComposicion);
                        //updateChart2(data.Data.dataComposicion);
                        //updateChart3(data.Data.dataComposicion);
                    }
                }
                else {
                    $("#alertSim").removeClass('hidden');
                    $("#alertText").text(data.Message);
                    //toastr.error(data.Message);
                }
            }).fail(function (e) {
            }).always(function () {
                $("#Seccion01").click();
                $("#overlay").hide();
            });
        }
        $("#txtTasaEfectiva").change(function (e) {
            let porcent = getPorcentaje($(this).val());
            let cociente = 0;
            if ((porcent + 0.1) > 1) {
                porcent = 1;
            } else {
                porcent = porcent + 0.1;
            }
            cociente = porcent / 4.0;
            myChart.options.scales.y.max = porcent;
            myChart.options.scales.y.ticks.stepSize = cociente;
            myChart2.options.scales.y.max = porcent;
            myChart2.options.scales.y.ticks.stepSize = cociente;
            myChart.update();
            myChart2.update();
            //myChart2.update();
        });
        $("#ddlMoneda").change(function () {
            let _moneda = $("#ddlMoneda option:selected").val();
            let spanMoneda = "";
            if (_moneda == 0) {
                spanMoneda = "S/."
            }
            if (_moneda == 1) {
                spanMoneda = "$"
            }
            $(".currency").text(spanMoneda);
        });

        //var controlChangeSimularIndependientes = "#ddlPersoneria,#ddlOperacion,#ddlProducto";
        var controlsChangeSimular = '#ddlTipCliente,#ddlMoneda,#txtMonto,#ddlCanalAtencion,#txtTasaEfectiva,#txtPlazoMeses,#ddlClasificacionInterna,#ddlGarantiaReal,#ddlMonedaReal,#txtMontoGarantiaReal,#ddlMonedaPersonal,#txtMontoGarantiaPersonal,#ddlClasificacionGarantia,#ddlModeloRORAC';
        $(controlsChangeSimular).change(function (e, data) {
            if (data != undefined && data != null) {
                if (data == "clean") {
                    return;
                }
                if (data == "fSeleccionar") {
                    return;
                }
            } else {
                fnGrabar('simular');
            }

        });

        function fnCallHandsontableService() {
            let IdeClienteProducto = $("#IdeClienteProducto").text();
            if (IdeClienteProducto == undefined || IdeClienteProducto == null || IdeClienteProducto == 0) {
                return;
            }
            $("#overlay").show();
            $.getJSON('@Url.Action("JSON_ReporteRORACModelo")', { ide_cliente_producto: IdeClienteProducto, incremento_tasa: $("#ddlRangoTasa option:selected").val(), incremento_plazo: $("#ddlRangoPlazo option:selected").val() }, function (data) {
                reconstruirHandsontable(data);
            }).done(function () {
                $("#overlay").hide();
            });
        }
        function fnCallChartsService() {
            let IdeClienteProducto = $("#IdeClienteProducto").text();
            if (IdeClienteProducto == undefined || IdeClienteProducto == null || IdeClienteProducto == 0) {
                return;
            }
            $("#overlay").show();
            $.getJSON('@Url.Action("JSON_ReporteComposicion")', { ide_cliente_producto: IdeClienteProducto }, function (data) {
                updateChart1(data);
                updateChart2(data);
                //updateChart3(data);
            }).done(function () {
                $("#overlay").hide();
            });
        }
        function fnCallCalendario() {
            let IdeClienteProducto = $("#IdeClienteProducto").text();
            if (IdeClienteProducto == undefined || IdeClienteProducto == null || IdeClienteProducto == 0) {
                return;
            }
            $("#overlay").show();
            $.getJSON('@Url.Action("JSON_Cronograma")', { ide_cliente_producto: IdeClienteProducto }, function (data) {

                $("#tbodyCalendario").empty();
                if (data == undefined || data == null) return;
                let cadena = "";
                $.each(data, function (index, item) {
                    var trClass = "";
                    if (item.color == "beige") {
                        trClass = "colorBeige";
                    }
                    if (item.color == "gray") {
                        trClass = "colorGray";
                    }
                    if (item.color == "dark") {
                        trClass = "colorDark";
                    }
                    cadena += "<tr class=" + trClass + ">";
                    cadena += "<td align='" + item.alineacion +"'>" + item.col1 + "</td>";
                    cadena += "<td align='" + item.alineacion + "'>" + item.col2 + "</td>";
                    cadena += "<td align='" + item.alineacion + "'>" + item.col3 + "</td>";
                    cadena += "<td align='" + item.alineacion + "'>" + item.col4 + "</td>";
                    cadena += "<td align='" + item.alineacion + "'>" + item.col5 + "</td>";
                    cadena += "<td align='" + item.alineacion + "'>" + item.col6 + "</td>";
                    cadena += "<td align='" + item.alineacion + "'>" + item.col7 + "</td>";
                    cadena += "</tr>";
                });
                $("#tbodyCalendario").append(cadena);

            }).done(function () {
                $("#overlay").hide();
            });
        }
        $("#Seccion02").click(function () {
            fnCallHandsontableService();
        });
        $("#Seccion03").click(function () {
            fnCallChartsService();
        });
        $("#Seccion04").click(function () {
            fnCallCalendario();
        });
        $("#ddlRangoTasa, #ddlRangoPlazo").change(function () {
            fnCallHandsontableService();
        });

        const totalizer = {
            id: 'totalizer',
            beforeUpdate: chart => {
                let totals = {}
                let utmost = 0

                chart.data.datasets.forEach((dataset, datasetIndex) => {
                    if (chart.isDatasetVisible(datasetIndex)) {
                        utmost = datasetIndex
                        if (dataset.data) {
                            dataset.data.forEach((value, index) => {
                                totals[index] = (totals[index] || 0) + value
                            })
                        }

                    }
                })
                chart.$totalizer = {
                    totals: totals,
                    utmost: utmost
                }
            }
        }

        Chart.defaults.font.size = 10;
        Chart.defaults.font.family = "Poppins";
        Chart.register(ChartDataLabels);
        var dataComposicion = jsModel.dataComposicion;
        var compOPE, labelsOPE, valuesOPE, invOPE, negOPE = [];
        var compOBJ, labelsOBJ, valuesOBJ, invOBJ, negOBJ = [];
        var compRIE, labelsRIE, valuesRIE, invRIE, negRIE = [];

        if (dataComposicion != null) {
            compOPE = dataComposicion.filter(a => a.tipo == 1);
            labelsOPE = compOPE.map(x => x.detalle);
            valuesOPE = compOPE.map(x => x.valor);
            invOPE = compOPE.map(x => x.invisible);
            negOPE = compOPE.map(x => x.negativo);
        }

        const ctx = document.getElementById('myChart');
        ctx.height = 300;
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labelsOPE,
                datasets: [
                    /*{
                        label: '# de Votos',
                        backgroundColor: ["#969076", "#969076", "#969076", "#969076", "#969076", "#969076", "#812b2e"],
                        data: valuesOPE,
                        borderWidth: 1,
                    },*/
                    {
                        //label: '#',
                        //backgroundColor: ["#D2BB8B", "#D2BB8B", "#D2BB8B", "#D2BB8B", "#D2BB8B", "#D2BB8B", "#969076"],
                        data: invOPE, //[0.10, 0.10, 0.10, 0.10, 0.10, 0.10],
                        borderWidth: 0,
                        //pointRadius: 0,
                        //borderColor: "#0000ff",
                        backgroundColor: "transparent",
                    }, {
                        //label: '#',
                        backgroundColor: ["#D2BB8B", "#D2BB8B", "#D2BB8B", "#D2BB8B", "#D2BB8B", "#D2BB8B", "#969076"],
                        data: negOPE, //[0.01, 0.02, 0.03, 0.04, 0.05, 0.06],
                        borderWidth: 1,
                    },
                    /*{
                        label: 'Total',
                        data: [0, 0, 0, 0, 0, 0, 0],
                    }*/
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: 'Composición Pricing de la Operación',
                        font: {
                            size: 14
                        }
                    },
                    legend: {
                        display: false,
                    },
                    tooltip: {
                        enabled: false,
                    },
                    datalabels: {
                        align: 'end',
                        anchor: 'end',
                        color: 'black',
                        font: {
                            weight: 'bold',
                        },
                        formatter: (value, ctx) => {
                            //const total = ctx.chart.$totalizer.totals[ctx.dataIndex];
                            //const _tot = (total * 100).toFixed(2) + '%';
                            //return _tot; //total.toLocaleString('fr-FR', {});
                            return (value * 100).toFixed(2) + '%';
                        },
                        display: function (ctx) {
                            return ctx.datasetIndex === ctx.chart.$totalizer.utmost
                        },
                        //color: 'rgba(255,255,255)',
                    }
                },
                scales: {
                    x: {
                        stacked: true,
                      },
                    y: {
                        stacked: true,
                        beginAtZero: true,
                        max: .2,
                        min: 0,
                        ticks: {
                            stepSize: .050,
                            callback: function (value, ctx) {
                                return (value * 100).toFixed(0) + '%';
                            },
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Percentage',
                        },
                    },
                },
            },
            plugins: [totalizer],
        });

        if (dataComposicion != null) {
            compOBJ = dataComposicion.filter(a => a.tipo == 2);
            labelsOBJ = compOBJ.map(x => x.detalle);
            valuesOBJ = compOBJ.map(x => x.valor);
            invOBJ = compOBJ.map(x => x.invisible);
            negOBJ = compOBJ.map(x => x.negativo);
        }

        const ctx2 = document.getElementById('myChart2');
        ctx2.height = 300;
        var myChart2 = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: labelsOBJ,
                datasets: [
                    /*
                    {
                        label: '# de Votos',
                        backgroundColor: ["#969076", "#969076", "#969076", "#969076", "#969076", "#969076", "#222840"],
                        data: valuesOBJ,
                        borderWidth: 1,
                    }*/
                    {
                        //backgroundColor: ["#3461A8", "#3461A8", "#3461A8", "#3461A8", "#3461A8", "#3461A8", "#969076"],
                        data: invOBJ,
                        borderWidth: 0,
                        backgroundColor: "transparent",
                    },
                    {
                        backgroundColor: ["#3461A8", "#3461A8", "#3461A8", "#3461A8", "#3461A8", "#3461A8", "#969076"],
                        data: negOBJ,
                        borderWidth: 1,
                    },
                    //{
                        //label: 'Total',
                        //data: [0, 0, 0, 0, 0, 0, 0],
                    //}
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: 'Composición Pricing Objetivo',
                        font: {
                            size: 14,
                        }
                    },
                    legend: {
                        display: false,
                    },
                    tooltip: {
                        enabled: false,
                    },
                    datalabels: {
                        align: 'end',
                        anchor: 'end',
                        color: 'black',
                        font: {
                            weight: 'bold',
                        },
                        formatter: (value, ctx) => {
                            //const total = ctx.chart.$totalizer.totals[ctx.dataIndex];
                            //const _tot = (total * 100).toFixed(2) + '%';
                            //return _tot; //total.toLocaleString('fr-FR', {});
                            return (value * 100).toFixed(2) + '%';
                        },
                        display: function (ctx) {
                            return ctx.datasetIndex === ctx.chart.$totalizer.utmost
                        }
                    }
                },
                scales: {
                    x: {
                        stacked: true
                    },
                    y: {
                        stacked: true,
                        beginAtZero: true,
                        max: .2,
                        min: 0,
                        ticks: {
                            stepSize: .050,
                            callback: function (value) {
                                return (value * 100).toFixed(0) + '%';
                            },
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Percentage',
                        },
                    },
                },
            },
            plugins: [totalizer]
        });

        if (dataComposicion != null) {
            compRIE = dataComposicion.filter(a => a.tipo == 3);
            labelsRIE = compRIE.map(x => x.detalle);
            valuesRIE = compRIE.map(x => x.valor);
            invRIE = compRIE.map(x => x.invisible);
            negRIE = compRIE.map(x => x.negativo);
        }

        /*
        const ctx3 = document.getElementById('myChart3');
        ctx3.height = 300;
        var myChart3 = new Chart(ctx3, {
            type: 'bar',
            data: {
                labels: labelsRIE,
                datasets: [
                    {
                        data: invRIE,
                        borderWidth: 0,
                        backgroundColor: "transparent",
                    },
                    {
                        backgroundColor: ["#A4343A", "#A4343A", "#A4343A", "#A4343A", "#969076"],
                        data: negRIE,
                        borderWidth: 1,
                    },
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: 'Composición Pricing modelo Prima de Riesgo',
                        font: {
                            size: 14,
                        }
                    },
                    legend: {
                        display: false,
                    },
                    tooltip: {
                        enabled: false,
                    },
                    datalabels: {
                        align: 'end',
                        anchor: 'end',
                        color: 'black',
                        font: {
                            weight: 'bold',
                        },
                        formatter: (value, ctx) => {
                            return (value * 100).toFixed(2) + '%';
                        },
                        display: function (ctx) {
                            return ctx.datasetIndex === ctx.chart.$totalizer.utmost
                        }
                    }
                },
                scales: {
                    x: {
                        stacked: true,
                    },
                    y: {
                        stacked: true,
                        beginAtZero: true,
                        max: .2,
                        min: 0,
                        ticks: {
                            stepSize: .050,
                            callback: function (value) {
                                return (value * 100).toFixed(0) + '%';
                            },
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Percentage',
                        },
                    },
                },
            },
            plugins: [totalizer]
        });
        */



    });



</script>
